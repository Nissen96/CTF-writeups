#!/usr/bin/python3

from pwn import *
from binascii import unhexlify

flag_length = 18

r = remote("heckin-nullbytes.hkn", 9001)
r.recvuntil(b"inp:")

def get_flag():
    r.sendline(b"a")
    output = unhexlify(r.recvline().strip().split()[1])
    r.recvuntil(b"inp:")
    return output

def get_enc1():
    r.sendline(b"b")
    r.recvuntil(b": ")
    r.sendline(b"00" * 18)
    output = unhexlify(r.recvline().strip().split()[1])
    r.recvuntil(b"inp:")
    return output

def get_enc2():
    r.sendline(b"c")
    r.recvuntil(b": ")
    r.sendline(b"00" * 18)
    output = unhexlify(r.recvline().strip().split()[1])
    r.recvuntil(b"inp:")
    return output


def eliminate(fn):
    options = [set(range(256)) for _ in range(flag_length)]
    while not all(map(lambda x: len(x) == 1, options)):
        for k, v in enumerate(fn()):
            if v in options[k]:
                options[k].remove(v)
    return b"".join([bytes(x) for x in options])


print("Finding k1...")
k1 = eliminate(get_enc1)
print(f"k1 = {k1}\n")

print("Finding k2...")
k2 = eliminate(get_enc2)
print(f"k2 = {k2}\n")

print("Finding flag...")
flag = xor(eliminate(get_flag), k1, k2)
print(flag.decode())
